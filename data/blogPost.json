{
  "sys": {
    "type": "Array"
  },
  "total": 2,
  "skip": 0,
  "limit": 100,
  "items": [
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "fq59fgvnc0ut"
          }
        },
        "id": "3QQSG6P6h0Oz9TOU190ifF",
        "type": "Entry",
        "createdAt": "2019-11-21T07:57:35.953Z",
        "updatedAt": "2019-11-23T13:54:56.381Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "revision": 7,
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "blogPost"
          }
        },
        "locale": "en-US"
      },
      "fields": {
        "title": "Rebuilding my blog with NextJS and Contentful",
        "keywords": "learning by doing, my blog, react, nextjs, free time",
        "description": "This is a quick story about my new blog and what it took to build it",
        "slug": "rebuilding-my-blog-with-nextjs-and-contentful",
        "body": {
          "data": {},
          "content": [
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "The time has come to upgrade my blog. Besides, we're using a similar stack at work, so this excersize for really very beneficial for me. I have learned a lot about some of the pitfals and quirks of this setup and I am happy to share my findings here.",
                  "nodeType": "text"
                }
              ],
              "nodeType": "paragraph"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "Why NextJS?",
                  "nodeType": "text"
                }
              ],
              "nodeType": "heading-3"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "I was surprised how well it works and how easy is to start with it.",
                  "nodeType": "text"
                }
              ],
              "nodeType": "paragraph"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "Typography",
                  "nodeType": "text"
                }
              ],
              "nodeType": "heading-3"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "I chose to use ",
                  "nodeType": "text"
                },
                {
                  "data": {
                    "uri": "https://www.gridlover.net/try"
                  },
                  "content": [
                    {
                      "data": {},
                      "marks": [],
                      "value": "Gridlover",
                      "nodeType": "text"
                    }
                  ],
                  "nodeType": "hyperlink"
                },
                {
                  "data": {},
                  "marks": [],
                  "value": " for building my typography system. The tool is great and provides a live preview with well formed CSS.",
                  "nodeType": "text"
                }
              ],
              "nodeType": "paragraph"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "Context and APIs",
                  "nodeType": "text"
                }
              ],
              "nodeType": "heading-3"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "NextJS provides a neat way to pass dependencies to the page. Same method can be used to wrap your Pages with Provides (like Redux Providers or Apollo Provides). You need to create a file ",
                  "nodeType": "text"
                },
                {
                  "data": {},
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "value": "pages/_app.tsx",
                  "nodeType": "text"
                },
                {
                  "data": {},
                  "marks": [],
                  "value": ", like this:",
                  "nodeType": "text"
                }
              ],
              "nodeType": "paragraph"
            },
            {
              "data": {
                "target": {
                  "sys": {
                    "space": {
                      "sys": {
                        "type": "Link",
                        "linkType": "Space",
                        "id": "fq59fgvnc0ut"
                      }
                    },
                    "id": "2S1jIFyf8f8Mh2UxYhRlYn",
                    "type": "Entry",
                    "createdAt": "2019-11-23T13:54:30.874Z",
                    "updatedAt": "2019-11-23T16:08:03.527Z",
                    "environment": {
                      "sys": {
                        "id": "master",
                        "type": "Link",
                        "linkType": "Environment"
                      }
                    },
                    "revision": 5,
                    "contentType": {
                      "sys": {
                        "type": "Link",
                        "linkType": "ContentType",
                        "id": "codeSnippet"
                      }
                    },
                    "locale": "en-US"
                  },
                  "fields": {
                    "title": "NextJS global wrapper in _app.tsx",
                    "slug": "nextjs-global-wrapper-in-_app-tsx",
                    "code": "import React from 'react'\nimport App from 'next/app'\nimport ContentfulClient from '../lib/ContentfulClient'\n\nexport type PageProps = {\n  pageProps: any\n}\n\nexport default class BlogApp extends App {\n  static async getInitialProps({ Component, ctx }): Promise<PageProps> {\n    let pageProps = {}\n\n    ctx.contentfulClient = ContentfulClient\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return { pageProps }\n  }\n\n  render(): JSX.Element {\n    const { Component, pageProps } = this.props\n    return <Component {...pageProps} />\n  }\n}"
                  }
                }
              },
              "content": [],
              "nodeType": "embedded-entry-block"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "Types all the way",
                  "nodeType": "text"
                }
              ],
              "nodeType": "heading-3"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "The page should be types as ",
                  "nodeType": "text"
                },
                {
                  "data": {},
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "value": "NextComponentType",
                  "nodeType": "text"
                },
                {
                  "data": {},
                  "marks": [],
                  "value": ". It is a wrapper around React types.",
                  "nodeType": "text"
                }
              ],
              "nodeType": "paragraph"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "You also need to have two additional types:",
                  "nodeType": "text"
                }
              ],
              "nodeType": "paragraph"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "content": [
                    {
                      "data": {},
                      "content": [
                        {
                          "data": {},
                          "marks": [],
                          "value": "a type for the extenting page props;",
                          "nodeType": "text"
                        }
                      ],
                      "nodeType": "paragraph"
                    }
                  ],
                  "nodeType": "list-item"
                },
                {
                  "data": {},
                  "content": [
                    {
                      "data": {},
                      "content": [
                        {
                          "data": {},
                          "marks": [],
                          "value": "a return type for ",
                          "nodeType": "text"
                        },
                        {
                          "data": {},
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "value": "getInitialProps",
                          "nodeType": "text"
                        },
                        {
                          "data": {},
                          "marks": [],
                          "value": " function.",
                          "nodeType": "text"
                        }
                      ],
                      "nodeType": "paragraph"
                    }
                  ],
                  "nodeType": "list-item"
                }
              ],
              "nodeType": "unordered-list"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "Overall, it looks like this:",
                  "nodeType": "text"
                }
              ],
              "nodeType": "paragraph"
            },
            {
              "data": {
                "target": {
                  "sys": {
                    "space": {
                      "sys": {
                        "type": "Link",
                        "linkType": "Space",
                        "id": "fq59fgvnc0ut"
                      }
                    },
                    "id": "5O41KWz6H2KWUAFrvvMDQk",
                    "type": "Entry",
                    "createdAt": "2019-11-23T08:06:00.793Z",
                    "updatedAt": "2019-11-25T12:24:50.492Z",
                    "environment": {
                      "sys": {
                        "id": "master",
                        "type": "Link",
                        "linkType": "Environment"
                      }
                    },
                    "revision": 4,
                    "contentType": {
                      "sys": {
                        "type": "Link",
                        "linkType": "ContentType",
                        "id": "codeSnippet"
                      }
                    },
                    "locale": "en-US"
                  },
                  "fields": {
                    "title": "Properly typed NextJS page",
                    "slug": "properly-typed-nextjs-page",
                    "code": "type HomeProps = {\n  posts: Entry<Post>[]\n}\n\ntype BlogContext = {\n  contentfulClient: ContentfulClientApi\n};\n\nconst Home: NextComponentType<BlogContext, HomeProps, HomeProps> = ({ posts }) => (\n  //... render the list of blog posts\n)\n\nHome.getInitialProps = async (ctx): Promise<HomeProps> => {\n  const { contentfulClient } = ctx\n  const posts = await contentfulClient.getEntries<Post>({})\n  return { posts: posts.items }\n}\n\nexport default Home\n"
                  }
                }
              },
              "content": [],
              "nodeType": "embedded-entry-block"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "Keeping track of changes",
                  "nodeType": "text"
                }
              ],
              "nodeType": "heading-3"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "I am running ",
                  "nodeType": "text"
                },
                {
                  "data": {
                    "uri": "https://www.npmjs.com/package/commitizen"
                  },
                  "content": [
                    {
                      "data": {},
                      "marks": [],
                      "value": "commitizen",
                      "nodeType": "text"
                    }
                  ],
                  "nodeType": "hyperlink"
                },
                {
                  "data": {},
                  "marks": [],
                  "value": " on ",
                  "nodeType": "text"
                },
                {
                  "data": {},
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "value": "prepare-commit-msg",
                  "nodeType": "text"
                },
                {
                  "data": {},
                  "marks": [],
                  "value": " hook using ",
                  "nodeType": "text"
                },
                {
                  "data": {
                    "uri": "https://www.npmjs.com/package/husky"
                  },
                  "content": [
                    {
                      "data": {},
                      "marks": [],
                      "value": "husky",
                      "nodeType": "text"
                    }
                  ],
                  "nodeType": "hyperlink"
                },
                {
                  "data": {},
                  "marks": [],
                  "value": ". This gives me a simple UI to write some meaningful commit messages. In fact, at work I did the same for every single repository we have.",
                  "nodeType": "text"
                }
              ],
              "nodeType": "paragraph"
            }
          ],
          "nodeType": "document"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "fq59fgvnc0ut"
          }
        },
        "id": "2gxc9tXUlFKSefi9Jcu5MA",
        "type": "Entry",
        "createdAt": "2019-09-12T20:11:11.682Z",
        "updatedAt": "2019-11-21T18:42:08.613Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "revision": 3,
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "blogPost"
          }
        },
        "locale": "en-US"
      },
      "fields": {
        "title": "Exploring Graphs",
        "keywords": "data structures, algorithms, interviews",
        "description": "A quick write-up about a few data structures",
        "slug": "exploring-graphs",
        "body": {
          "data": {},
          "content": [
            {
              "data": {
                "target": {
                  "sys": {
                    "space": {
                      "sys": {
                        "type": "Link",
                        "linkType": "Space",
                        "id": "fq59fgvnc0ut"
                      }
                    },
                    "id": "6sXuBslfzww08z53X3VCnM",
                    "type": "Entry",
                    "createdAt": "2019-09-12T20:08:36.050Z",
                    "updatedAt": "2019-11-23T16:00:00.857Z",
                    "environment": {
                      "sys": {
                        "id": "master",
                        "type": "Link",
                        "linkType": "Environment"
                      }
                    },
                    "revision": 4,
                    "contentType": {
                      "sys": {
                        "type": "Link",
                        "linkType": "ContentType",
                        "id": "codeSnippet"
                      }
                    },
                    "locale": "en-US"
                  },
                  "fields": {
                    "title": "Association list",
                    "slug": "association-list",
                    "code": "const data = {};\nconst add = (f, t) => {\n  data[t] = data[t] || [];\n  data[f] = data[f] || [];\n  if (data[f].indexOf(t) === -1) {\n    data[f].push(t);\n  }\n}\nconst remove = (f, t) => {\n  delete data[f][t];\n  return true;\n}"
                  }
                }
              },
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "Recently, I have decided it's time to brush up my memory on data structures.",
                  "nodeType": "text"
                }
              ],
              "nodeType": "paragraph"
            },
            {
              "data": {
                "target": {
                  "sys": {
                    "space": {
                      "sys": {
                        "type": "Link",
                        "linkType": "Space",
                        "id": "fq59fgvnc0ut"
                      }
                    },
                    "id": "6sXuBslfzww08z53X3VCnM",
                    "type": "Entry",
                    "createdAt": "2019-09-12T20:08:36.050Z",
                    "updatedAt": "2019-11-23T16:00:00.857Z",
                    "environment": {
                      "sys": {
                        "id": "master",
                        "type": "Link",
                        "linkType": "Environment"
                      }
                    },
                    "revision": 4,
                    "contentType": {
                      "sys": {
                        "type": "Link",
                        "linkType": "ContentType",
                        "id": "codeSnippet"
                      }
                    },
                    "locale": "en-US"
                  },
                  "fields": {
                    "title": "Association list",
                    "slug": "association-list",
                    "code": "const data = {};\nconst add = (f, t) => {\n  data[t] = data[t] || [];\n  data[f] = data[f] || [];\n  if (data[f].indexOf(t) === -1) {\n    data[f].push(t);\n  }\n}\nconst remove = (f, t) => {\n  delete data[f][t];\n  return true;\n}"
                  }
                }
              },
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "I moved on to Graphs and one of the ways to encode a graph is to use Association List",
                  "nodeType": "text"
                }
              ],
              "nodeType": "paragraph"
            },
            {
              "data": {
                "target": {
                  "sys": {
                    "space": {
                      "sys": {
                        "type": "Link",
                        "linkType": "Space",
                        "id": "fq59fgvnc0ut"
                      }
                    },
                    "id": "6sXuBslfzww08z53X3VCnM",
                    "type": "Entry",
                    "createdAt": "2019-09-12T20:08:36.050Z",
                    "updatedAt": "2019-11-23T16:00:00.857Z",
                    "environment": {
                      "sys": {
                        "id": "master",
                        "type": "Link",
                        "linkType": "Environment"
                      }
                    },
                    "revision": 4,
                    "contentType": {
                      "sys": {
                        "type": "Link",
                        "linkType": "ContentType",
                        "id": "codeSnippet"
                      }
                    },
                    "locale": "en-US"
                  },
                  "fields": {
                    "title": "Association list",
                    "slug": "association-list",
                    "code": "const data = {};\nconst add = (f, t) => {\n  data[t] = data[t] || [];\n  data[f] = data[f] || [];\n  if (data[f].indexOf(t) === -1) {\n    data[f].push(t);\n  }\n}\nconst remove = (f, t) => {\n  delete data[f][t];\n  return true;\n}"
                  }
                }
              },
              "content": [],
              "nodeType": "embedded-entry-block"
            },
            {
              "data": {},
              "content": [
                {
                  "data": {},
                  "marks": [],
                  "value": "",
                  "nodeType": "text"
                }
              ],
              "nodeType": "paragraph"
            }
          ],
          "nodeType": "document"
        }
      }
    }
  ],
  "includes": {
    "Entry": [
      {
        "sys": {
          "space": {
            "sys": {
              "type": "Link",
              "linkType": "Space",
              "id": "fq59fgvnc0ut"
            }
          },
          "id": "2S1jIFyf8f8Mh2UxYhRlYn",
          "type": "Entry",
          "createdAt": "2019-11-23T13:54:30.874Z",
          "updatedAt": "2019-11-23T16:08:03.527Z",
          "environment": {
            "sys": {
              "id": "master",
              "type": "Link",
              "linkType": "Environment"
            }
          },
          "revision": 5,
          "contentType": {
            "sys": {
              "type": "Link",
              "linkType": "ContentType",
              "id": "codeSnippet"
            }
          },
          "locale": "en-US"
        },
        "fields": {
          "title": "NextJS global wrapper in _app.tsx",
          "slug": "nextjs-global-wrapper-in-_app-tsx",
          "code": "import React from 'react'\nimport App from 'next/app'\nimport ContentfulClient from '../lib/ContentfulClient'\n\nexport type PageProps = {\n  pageProps: any\n}\n\nexport default class BlogApp extends App {\n  static async getInitialProps({ Component, ctx }): Promise<PageProps> {\n    let pageProps = {}\n\n    ctx.contentfulClient = ContentfulClient\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return { pageProps }\n  }\n\n  render(): JSX.Element {\n    const { Component, pageProps } = this.props\n    return <Component {...pageProps} />\n  }\n}"
        }
      },
      {
        "sys": {
          "space": {
            "sys": {
              "type": "Link",
              "linkType": "Space",
              "id": "fq59fgvnc0ut"
            }
          },
          "id": "5O41KWz6H2KWUAFrvvMDQk",
          "type": "Entry",
          "createdAt": "2019-11-23T08:06:00.793Z",
          "updatedAt": "2019-11-25T12:24:50.492Z",
          "environment": {
            "sys": {
              "id": "master",
              "type": "Link",
              "linkType": "Environment"
            }
          },
          "revision": 4,
          "contentType": {
            "sys": {
              "type": "Link",
              "linkType": "ContentType",
              "id": "codeSnippet"
            }
          },
          "locale": "en-US"
        },
        "fields": {
          "title": "Properly typed NextJS page",
          "slug": "properly-typed-nextjs-page",
          "code": "type HomeProps = {\n  posts: Entry<Post>[]\n}\n\ntype BlogContext = {\n  contentfulClient: ContentfulClientApi\n};\n\nconst Home: NextComponentType<BlogContext, HomeProps, HomeProps> = ({ posts }) => (\n  //... render the list of blog posts\n)\n\nHome.getInitialProps = async (ctx): Promise<HomeProps> => {\n  const { contentfulClient } = ctx\n  const posts = await contentfulClient.getEntries<Post>({})\n  return { posts: posts.items }\n}\n\nexport default Home\n"
        }
      },
      {
        "sys": {
          "space": {
            "sys": {
              "type": "Link",
              "linkType": "Space",
              "id": "fq59fgvnc0ut"
            }
          },
          "id": "6sXuBslfzww08z53X3VCnM",
          "type": "Entry",
          "createdAt": "2019-09-12T20:08:36.050Z",
          "updatedAt": "2019-11-23T16:00:00.857Z",
          "environment": {
            "sys": {
              "id": "master",
              "type": "Link",
              "linkType": "Environment"
            }
          },
          "revision": 4,
          "contentType": {
            "sys": {
              "type": "Link",
              "linkType": "ContentType",
              "id": "codeSnippet"
            }
          },
          "locale": "en-US"
        },
        "fields": {
          "title": "Association list",
          "slug": "association-list",
          "code": "const data = {};\nconst add = (f, t) => {\n  data[t] = data[t] || [];\n  data[f] = data[f] || [];\n  if (data[f].indexOf(t) === -1) {\n    data[f].push(t);\n  }\n}\nconst remove = (f, t) => {\n  delete data[f][t];\n  return true;\n}"
        }
      }
    ]
  }
}